 digraph vcl_center {
	size="7.2,10.5"
	margin="0.5"
	center="1"
 acceptor [
	shape=hexagon
	label="Request received"
 ]
 ERROR [shape=plaintext]
 RESTART [shape=plaintext]
 acceptor -> start [style=bold,color=green]
 subgraph xcluster_prepresp {
	prepresp [
		shape=ellipse
		label="Filter obj.->resp."
	]
	vcl_deliver [
		shape=record
		label="vcl_deliver()|resp."
	]
	prepresp -> vcl_deliver [style=bold,color=green]
	prepresp -> vcl_deliver [style=bold,color=cyan]
	prepresp -> vcl_deliver [style=bold,color=red]
	prepresp -> vcl_deliver [style=bold,color=blue,]
	vcl_deliver -> deliver [style=bold,color=green,label=deliver]
	vcl_deliver -> deliver [style=bold,color=red]
	vcl_deliver -> deliver [style=bold,color=blue]
     vcl_deliver -> errdeliver [label="error"]
     errdeliver [label="ERROR",shape=plaintext]
     vcl_deliver -> rstdeliver [label="restart",color=purple]
     rstdeliver [label="RESTART",shape=plaintext]
     vcl_deliver -> streambody [style=bold,color=cyan,label="deliver"]
 }
 subgraph xcluster_deliver {
	deliver [
		shape=ellipse
		label="Send body"
	]
 }
 deliver -> DONE [style=bold,color=green]
 deliver -> DONE [style=bold,color=red]
 deliver -> DONE [style=bold,color=blue]
	DONE [
		shape=hexagon
		label="Request completed"
	]
 subgraph xcluster_error {
	vcl_error [
		shape=record
		label="vcl_error()|resp."
	]
	ERROR -> vcl_error
	vcl_error-> prepresp [label=deliver]
 }
 vcl_error-> rsterr [label="restart",color=purple]
 rsterr [label="RESTART",shape=plaintext]
 subgraph xcluster_fetch {
	fetch [
		shape=ellipse
		label="fetch hdr\nfrom backend\n(find obj.ttl)"
	]
	vcl_fetch [
		shape=record
		label="vcl_fetch()|req.\nbereq.\nberesp."
	]
	fetch -> vcl_fetch [style=bold,color=blue]
	fetch -> vcl_fetch [style=bold,color=red]
	fetch_pass [
		shape=ellipse
		label="obj.f.pass=true"
	]
	vcl_fetch -> fetch_pass [label="hit_for_pass",style=bold,color=red]
 }
 fetch_pass -> fetchbody [style=bold,color=red]
 vcl_fetch -> fetchbody [label="deliver",style=bold,color=blue]
 vcl_fetch -> rstfetch [label="restart",color=purple]
 rstfetch [label="RESTART",shape=plaintext]
 fetch -> errfetch
 vcl_fetch -> errfetch [label="error"]
 errfetch [label="ERROR",shape=plaintext]
 subgraph xcluster_body {
	fetchbody [
		shape=diamond
		label="stream ?"
	]
	fetchbody2 [
		shape=ellipse
		label="fetch body\nfrom backend\n"
	]
 }
 fetchbody -> fetchbody2 [label=no,style=bold,color=red]
 fetchbody -> fetchbody2 [style=bold,color=blue]
 fetchbody -> prepresp [label=yes,style=bold,color=cyan]
 fetchbody2 -> prepresp [style=bold,color=red]
 fetchbody2 -> prepresp [style=bold,color=blue]
 subgraph xstreambody {
	streambody [
		shape=ellipse
		label="streaming\nfetch/deliver"
	]
 }
 streambody -> DONE [style=bold,color=cyan]
 subgraph xcluster_hit {
	hit [
		shape=record
		label="vcl_hit()|req.\nobj."
	]
 }
 hit -> err_hit [label="error"]
 err_hit [label="ERROR",shape=plaintext]
 hit -> rst_hit [label="restart",color=purple]
 rst_hit [label="RESTART",shape=plaintext]
 hit -> pass [label=pass,style=bold,color=red]
 hit -> prepresp [label="deliver",style=bold,color=green]
 subgraph xcluster_lookup {
	hash [
		shape=record
		label="vcl_hash()|req."
	]
	lookup [
		shape=diamond
		label="obj in cache ?\ncreate if not"
	]
	lookup2 [
		shape=diamond
		label="obj.f.pass ?"
	]
	hash -> lookup [label="hash",style=bold,color=green]
	lookup -> lookup2 [label="yes",style=bold,color=green]
 }
 lookup2 -> hit [label="no", style=bold,color=green]
 lookup2 -> pass [label="yes",style=bold,color=red]
 lookup -> miss [label="no",style=bold,color=blue]
 subgraph xcluster_miss {
	miss [
		shape=ellipse
		label="filter req.->bereq."
	]
	vcl_miss [
		shape=record
		label="vcl_miss()|req.\nbereq."
	]
	miss -> vcl_miss [style=bold,color=blue]
 }
 vcl_miss -> rst_miss [label="restart",color=purple]
 rst_miss [label="RESTART",shape=plaintext]
 vcl_miss -> err_miss [label="error"]
 err_miss [label="ERROR",shape=plaintext]
 vcl_miss -> fetch [label="fetch",style=bold,color=blue]
 vcl_miss -> pass [label="pass",style=bold,color=red]

 subgraph xcluster_pass {
	pass [
		shape=ellipse
		label="deref obj."
	]
	pass2 [
		shape=ellipse
		label="filter req.->bereq."
	]
	vcl_pass [
		shape=record
		label="vcl_pass()|req.\nbereq."
	]
	pass_do [
		shape=ellipse
		label="create anon object\n"
	]
	pass -> pass2 [style=bold, color=red]
	pass2 -> vcl_pass [style=bold, color=red]
	vcl_pass -> pass_do [label="pass"] [style=bold, color=red]
 }
 pass_do -> fetch [style=bold, color=red]
 vcl_pass -> rst_pass [label="restart",color=purple]
 rst_pass [label="RESTART",shape=plaintext]
 vcl_pass -> err_pass [label="error"]
 err_pass [label="ERROR",shape=plaintext]
 subgraph xcluster_pipe {
	pipe [
		shape=ellipse
		label="Filter req.->bereq."
	]
	vcl_pipe [
		shape=record
		label="vcl_pipe()|req.\nbereq\."
	]
	pipe_do [
		shape=ellipse
		label="send bereq.\npipe until close"
	]
	vcl_pipe -> pipe_do [label="pipe",style=bold,color=orange]
	pipe -> vcl_pipe [style=bold,color=orange]
 }
 pipe_do -> DONE [style=bold,color=orange]
 vcl_pipe -> err_pipe [label="error"]
 err_pipe [label="ERROR",shape=plaintext]
 subgraph xcluster_recv {
	recv [
		shape=record
		label="vcl_recv()|req."
	]
 }
 RESTART -> recv
 recv -> pipe [label="pipe",style=bold,color=orange]
 recv -> pass2 [label="pass",style=bold,color=red]
 recv -> err_recv [label="error"]
 err_recv [label="ERROR",shape=plaintext]
 recv -> hash [label="lookup",style=bold,color=green]
 start [shape=box,label="Dissect request"]
 start -> recv [style=bold,color=green]
 }
